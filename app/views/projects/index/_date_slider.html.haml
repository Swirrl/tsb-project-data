.filter
  %label Project Dates
  %a.reset{href:"#", id:'reset-dates'}
    reset

  %div.text-fields
    %label
      date from:
    = text_field_tag :date_from, @search.date_from
    %label
      date to:
    = text_field_tag :date_to, @search.date_to

  #date-slider.slider
  #date-range-desc.value-desc

:javascript
  $(function() {

    // extents
    var minExtentDate = new Date(#{@projects_unfiltered.facets["start_date_stats_unfiltered"]["min"]});
    var maxExtentDate = new Date(#{@projects_unfiltered.facets["end_date_stats_unfiltered"]["max"]});

    minExtentDate = firstDayOfCurrentMonth(minExtentDate);
    maxExtentDate = firstDayOfNextMonth(maxExtentDate); // move end on by one month so get date diff right.

    var minExtentMoment = moment.utc(minExtentDate);
    var maxExtentMoment = moment.utc(maxExtentDate);

    var extentInMonths = maxExtentMoment.diff(minExtentMoment, 'months')

    // date from and to

    var dateFromDate = new Date(#{ @search.date_from ? "'#{@search.date_from}'" : @projects_unfiltered.facets["start_date_stats_unfiltered"]["min"]});
    var dateToDate = new Date(#{@search.date_to ? "'#{@search.date_to}'" : @projects_unfiltered.facets["end_date_stats_unfiltered"]["max"]});

    var dateFromMoment = moment.utc(firstDayOfCurrentMonth(dateFromDate));
    var dateToMoment = moment.utc(firstDayOfCurrentMonth(dateToDate));

    var dateFromInMonths = dateFromMoment.diff(minExtentMoment, 'months')
    var dateToInMonths = dateToMoment.diff(minExtentMoment, 'months')

    // utility funcs.

    function firstDayOfCurrentMonth(date) {
      return moment.utc( lastDayOfPrevMonth(date) ).add('days', 1).toDate();
    }

    function firstDayOfNextMonth( date ) {
      return moment.utc(date).add('months', 1).date(1).toDate();
    }

    function lastDayOfCurrentMonth( date ){
      return moment.utc( firstDayOfNextMonth(date) ).add('days', -1).toDate();
    }

    function lastDayOfPrevMonth( date ) {
      return moment.utc(date).date(1).add('days', -1).toDate();
    }


    function setSliderValues(from, to) {

      if(!from || from < 0) { from = 0 }
      if(!to || to > extentInMonths) { to = extentInMonths }

      if( from > extentInMonths ) { from = extentInMonths }
      if( to < 0 ) { to = 0 }

      if (to <= from ) {
        to = from;
      }

      $( "#date-slider" ).slider( "values", [ from, to ] );
    }

    function updateDescription() {

      var fromStr = $("#date_from").val();
      var toStr = $("#date_to").val();

      if (fromStr == "") {
        fromStr = moment.utc(minExtentDate).format("MMM YYYY");
      }

      if(toStr == "") {
        toStr = moment.utc(maxExtentDate).format("MMM YYYY");
      }

      var str = 'Projects whose duration overlaps: <br/>' + moment.utc(fromStr).format("MMM YYYY") + ' - ' + moment.utc(toStr).format("MMM YYYY");
      $("#date-range-desc").html( str );
    }

    function monthsToISODateString(noOfMonths, isEnd) {

      var d = minExtentMoment.clone().add('months', noOfMonths);

      // if it's an end date, move to end of current month
      if (isEnd) {
        d = moment.utc( lastDayOfCurrentMonth(d.toDate()) );
      }

      return d.format("YYYY-MM-DD");
    }

    function setDateTextFields(monthsFrom, monthsTo) {

      if( monthsFrom <= 0 ) {
        $("#date_from").val("");
      }
      else {
        $("#date_from").val( monthsToISODateString(monthsFrom, false) );
      }

      if( monthsTo >= extentInMonths ) {
        $("#date_to").val("");
      }
      else {
        $("#date_to").val( monthsToISODateString(monthsTo, true) );
      }
    }

    $( "#date-slider" ).slider({
      range: true,
      min: 0,
      max: extentInMonths,
      step: 1,
      slide: function( event, ui ) {
        var fromValue = ui.values[0];
        var toValue = ui.values[1];
        setDateTextFields(fromValue, toValue);
        updateDescription();
      },
      stop: function( event, ui ) {
        $("form#faceted-search").submit();
      }
    });

    $("#reset-dates").click( function() {
      setSliderValues(0, extentInMonths);
      setDateTextFields(0, extentInMonths);
      $("form#faceted-search").submit();
    });


    // set initial slider values.
    setSliderValues(dateFromInMonths, dateToInMonths);

    // set initial date text fields
    setDateTextFields(
      $( "#date-slider" ).slider("values", 0),
      $( "#date-slider" ).slider("values", 1)
    );

    updateDescription();


  });
