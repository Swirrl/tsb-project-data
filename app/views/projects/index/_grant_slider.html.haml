.filter
  %label Grant Amount
  %a.reset{href:"#", id:'reset-grants'}
    reset

  %div.text-fields
    %label
      grant from:
    = text_field_tag :offer_grant_from, @search.offer_grant_from, placeholder: '£amount'
    %label
      grant to:
    = text_field_tag :offer_grant_to, @search.offer_grant_to, placeholder: '£amount'

  #offer-grant-slider.slider
  #grant-range-desc.value-desc

:javascript
  $(function() {

    var minExtent = 0; //#{@projects_unfiltered.facets["offer_grant_stats_unfiltered"]["min"]};
    var maxExtent = 5000000; // #{@projects_unfiltered.facets["offer_grant_stats_unfiltered"]["max"]};

    var grantFrom =  #{@search.offer_grant_from || 'null'};
    var grantTo =  #{@search.offer_grant_to || 'null'};

    if(grantFrom == null) {grantFrom = minExtent;}
    if(grantTo == null) {grantTo = maxExtent;}

    var step = 25000;

    function formatCurrency(num) {
      return formatNumber(num,0,',','','£','','','');
    }

    function setSliderValues(from, to) {

      if(from < minExtent) { from = minExtent }
      if(to > maxExtent) { to = maxExtent }

      if(from > maxExtent ) { from = maxExtent }
      if(to < minExtent ) { to = minExtent }

      if (to <= from ) {
        to = from;
      }

      $( "#offer-grant-slider" ).slider( "values", [ from, to ] );
    }

    function setOfferGrantTextFields(from, to) {

      var fromTextVal = from;
      var toTextVal = to;

      if( from <= minExtent ) { fromTextVal = ""; }
      if( to >= maxExtent ) { toTextVal = ""; }

      $("#offer_grant_from").val( fromTextVal );
      $("#offer_grant_to").val( toTextVal );
    }

    function updateGrantRangeDesc() {

      var from = $("#offer_grant_from").val();
      var to = $("#offer_grant_to").val();

      from = formatCurrency(from);

      if (parseInt(to) == maxExtent || to == "") {
        to = formatCurrency(maxExtent) + "+";
      } else {
        to = formatCurrency(to);
      }

      var str = 'Projects with total grant amount: <br/>' + from + ' to ' + to;
      $("#grant-range-desc").html( str );
    }


    $( "#offer-grant-slider" ).slider({
      range: true,
      min: minExtent,
      max: maxExtent,
      step: step,
      slide: function( event, ui ) {
        setOfferGrantTextFields(ui.values[0], ui.values[1]);
        updateGrantRangeDesc();
      },
      stop: function( event, ui ) {
        $("form#faceted-search").submit();
      }
    });

    $("#reset-grants").click( function() {
      setSliderValues(minExtent, maxExtent);
      setOfferGrantTextFields(minExtent, maxExtent);
      $("form#faceted-search").submit();
    });

    setSliderValues(grantFrom, grantTo);

    //
    setOfferGrantTextFields(
      $( "#offer-grant-slider" ).slider("values", 0),
      $( "#offer-grant-slider" ).slider("values", 1)
    );

    updateGrantRangeDesc();

  });